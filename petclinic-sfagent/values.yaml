# Default values for discovery-service.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: paulczar/petclinic
  tag: 2.1.0.BUILD-SNAPSHOT
  pullPolicy: IfNotPresent

# key --> apm key for sfagent
# Global application tags   
# sfappname_key and sfprojectname_key should be in lowercase. 
# sfappname: petclinic --> snappyflow/appname: petclinic
# sfprojectname: spring --> snappyflow/projectname: spring
global:
  sfappname: petclinic
  sfprojectname: demo-jolokia
  sfappname_key: snappyflow/appname
  sfprojectname_key: snappyflow/projectname
  key: "PAAhbCSHoyNr0ZMMsTX2E0uEz2U0mGcb05Xju3bVKXQ7+AAhLVJuvl/L/GEjDMptX67bXQrIMtlvSYpv7YrX7xig9rv+D8F8AzUfAH+ta0oFAULfuWEbCFq79QOIV1cjBu5s7Sx1+lvF3AYLFUwYw9puM8mLPyNg/NUdzK50+65ZXY74+cqymajIfHYfN9uP0uhNR17E/mZb/eHwts8FteakuSlRi8BLDSJYxf+GX/g="

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  # name: ~

rbac:
  create: true

podAnnotations: {}
#  prometheus.io/scrape: "true"
#  prometheus.io/path: "/actuator/prometheus"

spring:
  profile: mysql
jvmjolokia:
  sfagent:
    enabled: true
    image: snappyflowml/sfagent
    imageTag: latest
    imagePullPolicy: Always
    resources:
      requests:
        cpu: 250m
        memory: 256Mi
      limits:
        cpu: 500m
        memory: 512Mi
jmx_exporter:
  enabled: false
  image:
    repository: bitnami/jmx-exporter
    tag: latest
    pullPolicy: IfNotPresent
  port: 5556

## The list of ports that your app listens on
containerPort: 8080

extraEnv: {}

securityContext: {}
  # runAsUser: 1000
  # fsGroup: 1000

resources:
  limits:
    cpu: 500m
    memory: 1024Mi
  requests:
    cpu: 250m
    memory: 512Mi

## uncomment and modify the following livenessProbe and readinessProbe.
## These defaults should work with anything that uses the spring health actuator.
livenessProbe: {}
#   httpGet:
#     path: /actuator/health
#     port: http
#   initialDelaySeconds: 300
#   periodSeconds: 10
readinessProbe: {}
#   httpGet:
#     path: /actuator/health
#     port: http
#   initialDelaySeconds: 60
#   periodSeconds: 10

nodeSelector: {}

tolerations: []

affinity: {}

service:
  enabled: true
  headless: true
  httpPort: 80
  ## If service.type is not set to NodePort, the following statement
  ## will be ignored.
  ##
  # nodePort: 32015

  ## Service type can be set to ClusterIP, NodePort or LoadBalancer.
  ##
  type: ClusterIP

  ## Service annotations
  ##
  # annotations:
  #   service.beta.kubernetes.io/aws-load-balancer-backend-protocol: http
  #   service.beta.kubernetes.io/aws-load-balancer-ssl-cert: arn:aws:acm:xx-xxxx-x:xxxxxxxxxxx:certificate/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxx
  #   external-dns.alpha.kubernetes.io/hostname: drone.domain.tld.

ingress:
  ## If true, Ingress will be created.
  ##
  enabled: false

  ## Ingress annotations
  ##
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    kubernetes.io/ingress.class: nginx
  #   kubernetes.io/tls-acme: 'true'

  ## hostnames must be provided if Ingress is enabled
  ##
  # hosts:
  #   - "*"

  ## Ingress TLS configuration secrets
  ## Must be manually created in the namespace
  ##
  # tls:
  #   - secretName: spring-tls
  #     hosts:
  #       - spring.example.io

podDisruptionBudget:
  enabled: false
  minAvailable: 1

mysql:
  mysql_exporter:
    enabled: false
  mysqlRootPassword: spring
  mysqlUser: spring
  mysqlPassword: spring
  mysqlDatabase: petclinic
  persistence:
    enabled: true
    storageClass: "slow"
    accessMode: ReadWriteOnce
    size: 8Gi
  sfagent:
    enabled: true
    image: snappyflowml/sfagent
    imageTag: latest
    imagePullPolicy: Always
    resources:
      requests:
        cpu: 250m
        memory: 256Mi
      limits:
        cpu: 500m
        memory: 512Mi
  logrotate:
    enabled: true
    env:
      LOGROTATE_COMPRESSION: compress
      # LOGROTATE_INTERVAL: hourly
      LOGROTATE_COPIES: 3
      LOGROTATE_SIZE: 5M
      LOGROTATE_DELAYCOMPRESS: false
      LOG_FILE_ENDINGS: "log jtl"
      LOGROTATE_LOGFILE: "/dev/stdout"
      LOGROTATE_PARAMETERS: "vf"
      LOG_FILE: "/dev/stdout"


jmeter:
  image:
    repository: justb4/jmeter
    tag: 5.1.1
    pullPolicy: IfNotPresent
  env: {}
  resources: 
    limits:
      cpu: 500m
      memory: 1024Mi
    requests:
      cpu: 250m
      memory: 512Mi
  sfagent:
    enabled: true
    image: snappyflowml/sfagent
    imageTag: latest
    imagePullPolicy: Always
    resources:
      requests:
        cpu: 250m
        memory: 256Mi
      limits:
        cpu: 500m
        memory: 512Mi

nginx:
  resolver: "coredns.kube-system.svc.cluster.local"
  replicaCount: 1
  image:
    repository: nginx
    tag: latest
    pullPolicy: IfNotPresent
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 256m
      memory: 512Mi
  service:
    type: ClusterIP

  sfagent:
    enabled: true
    image: snappyflowml/sfagent
    imageTag: latest
    imagePullPolicy: Always
    resources:
      requests:
        cpu: 250m
        memory: 256Mi
      limits:
        cpu: 500m
        memory: 512Mi

  metrics:
    enabled: false
    image:
      repository: nginx/nginx-prometheus-exporter
      tag: 0.5.0
      pullPolicy: IfNotPresent
    port: 9113

logrotate:
  enabled: true
  image:
    repository: blacklabelops/logrotate
    tag: latest
    pullPolicy: IfNotPresent
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 256m
      memory: 512Mi
  env:
    LOGROTATE_COMPRESSION: compress
    LOGROTATE_INTERVAL: hourly
    LOGROTATE_COPIES: 3
    LOGROTATE_SIZE: 5M
    LOGROTATE_DELAYCOMPRESS: false
    LOG_FILE_ENDINGS: "log jtl"
    LOGROTATE_LOGFILE: "/dev/stdout"
    LOGROTATE_PARAMETERS: "vf"
    LOG_FILE: "/dev/stdout"
