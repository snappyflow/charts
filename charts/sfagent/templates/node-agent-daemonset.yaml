apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ template "sf-apm-agents.fullname" . }}-node
  labels:
    app: {{ template "sf-apm-agents.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
spec:
  selector:
    matchLabels:
      app: {{ template "sf-apm-agents.name" . }}
      release: {{ .Release.Name }}
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1      
  template:
    metadata:
      labels:
        app: {{ template "sf-apm-agents.name" . }}
        release: {{ .Release.Name }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
    spec:
      serviceAccountName: {{ if .Values.rbac.create }}{{ template "sf-apm-agents.name" . }}{{ else }}"{{ .Values.rbac.serviceAccountName }}"{{ end }}
      {{ if .Values.imageCredentials.token -}}
      imagePullSecrets:
      - name: {{ template "sf-apm-agents.name" . }}-imagepullsecret
      {{- end }}
      hostPID: true
      containers:
      - name: node-agent
        image: "{{ .Values.node_agent.image.repository }}:{{ .Values.node_agent.image.tag }}"
        imagePullPolicy: {{ .Values.node_agent.image.pullPolicy }}
        command: ["/bin/sh","-c"]
        args: ["/app/kube-node -nodename $NODE_NAME -remote-socket-service-ip $SOCKET_SERVICE -monitor_all_pods={{ .Values.config.monitor_all_pods }}  -basic-parsing {{ .Values.node_agent.basic_parsing }} -kubelet-for-metadata {{ .Values.node_agent.kubelet_for_metadata }} -mem-buf-limit-mb {{ .Values.node_agent.mem_buf_limit_mb }} -fluent-chunk-retry-limit {{ .Values.node_agent.fluent_chunk_retry_limit }} -debug={{ .Values.node_agent.debug }}"]
        resources:
{{ toYaml .Values.node_agent.resources | indent 12 }}
        env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: SOCKET_SERVICE
            value: {{ template "sf-apm-agents.fullname" . }}-service
        {{- if .Values.node_agent.drop_cluster_logs }}
          - name: DORP_CLUSTER_LOGS
            value: "1"
        {{- end }}
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: MY_POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
        securityContext:
          privileged: true
          capabilities:
            add:
            - SYS_ADMIN
        volumeMounts:
          - name: config
            mountPath: /opt/config
            readOnly: true
          - name: varlog
            mountPath: /var/log
          - name: varlibdockercontainers
            mountPath: /var/lib/docker/containers
            readOnly: true
          - name: proc
            mountPath: /host/proc
            mountPropagation: Bidirectional
            readOnly: true
          - name: sys
            mountPath: /host/sys
            mountPropagation: Bidirectional
            readOnly: true
          - name: root-fs
            mountPath: /rootfs
            mountPropagation: Bidirectional
            readOnly: true
      terminationGracePeriodSeconds: 30
    {{- if .Values.node_agent.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.node_agent.nodeSelector | indent 8 }}
    {{- end }}
    {{- if .Values.node_agent.tolerations }}
      tolerations:
{{ toYaml .Values.node_agent.tolerations | indent 8 }}
    {{- end }}
      volumes:
        - name: proc
          hostPath:
            path: /proc
        - name: sys
          hostPath:
            path: /sys
        - name: root-fs
          hostPath:
            path: /
        - name: fluentconfig
          emptyDir: {}
        - name: varlog
          hostPath:
            path: /var/log
        - name: varlibdockercontainers
          hostPath:
            path: /var/lib/docker/containers
        - name: config
          configMap:
            name: {{ template "sf-apm-agents.fullname" . }}
